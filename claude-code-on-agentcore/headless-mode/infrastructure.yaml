AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infrastructure for Claude Code on AgentCore - IAM Role, S3 Bucket, and ECR Repository'

Parameters:
  ProjectName:
    Type: String
    Default: claude-code-agent
    Description: Project name used for resource naming

Resources:
  # S3 Bucket for file outputs
  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldFiles
            Status: Enabled
            ExpirationInDays: 30
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-outputs'
        - Key: ManagedBy
          Value: CloudFormation

  # ECR Repository for Docker image
  EcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: MUTABLE
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 5 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 5
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-ecr'
        - Key: ManagedBy
          Value: CloudFormation

  # IAM Role for AgentCore Runtime
  AgentCoreExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - bedrock-agentcore.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/CloudWatchLogsFullAccess'
      Policies:
        - PolicyName: BedrockAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: BedrockModelAccess
                Effect: Allow
                Action:
                  - 'bedrock:InvokeModel'
                  - 'bedrock:InvokeModelWithResponseStream'
                Resource:
                  - 'arn:aws:bedrock:*::foundation-model/*'
                  - 'arn:aws:bedrock:*:*:inference-profile/*'

        - PolicyName: AgentCoreMemoryAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: MemoryOperations
                Effect: Allow
                Action:
                  - 'bedrock-agentcore:CreateMemory'
                  - 'bedrock-agentcore:GetMemory'
                  - 'bedrock-agentcore:ListMemories'
                  - 'bedrock-agentcore:DeleteMemory'
                  - 'bedrock-agentcore:CreateEvent'
                  - 'bedrock-agentcore:GetLastKTurns'
                  - 'bedrock-agentcore:QueryMemory'
                  - 'bedrock-agentcore:ListMemoryRecords'
                Resource: '*'

        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: OutputBucketAccess
                Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                  - 's3:ListBucket'
                Resource:
                  - !GetAtt OutputBucket.Arn
                  - !Sub '${OutputBucket.Arn}/*'
              - Sid: WebsiteBucketAccess
                Effect: Allow
                Action:
                  - 's3:CreateBucket'
                  - 's3:ListBucket'
                  - 's3:GetBucket*'
                  - 's3:PutBucket*'
                  - 's3:DeleteBucket'
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                  - 's3:DeleteObject'
                  - 's3:GetObjectAcl'
                  - 's3:GetBucketLocation'
                  - 's3:GetBucketWebsite'
                  - 's3:PutBucketWebsite'
                  - 's3:PutBucketPolicy'
                  - 's3:GetBucketPolicy'
                  - 's3:PutBucketPublicAccessBlock'
                  - 's3:GetBucketPublicAccessBlock'
                Resource:
                  - 'arn:aws:s3:::claude-code-*'
                  - 'arn:aws:s3:::claude-code-*/*'

        - PolicyName: CloudFrontAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudFrontOperations
                Effect: Allow
                Action:
                  - 'cloudfront:CreateDistribution'
                  - 'cloudfront:GetDistribution'
                  - 'cloudfront:GetDistributionConfig'
                  - 'cloudfront:UpdateDistribution'
                  - 'cloudfront:DeleteDistribution'
                  - 'cloudfront:ListDistributions'
                  - 'cloudfront:TagResource'
                  - 'cloudfront:CreateInvalidation'
                Resource: '*'

        - PolicyName: ECRAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: ECROperations
                Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                Resource: '*'

        - PolicyName: SSMAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParameter'
                  - 'ssm:PutParameter'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/claude-code-agent/*'

      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-role'
        - Key: ManagedBy
          Value: CloudFormation

Outputs:
  RoleArn:
    Description: ARN of the IAM role for AgentCore runtime
    Value: !GetAtt AgentCoreExecutionRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-RoleArn'

  OutputBucketName:
    Description: Name of the S3 bucket for file outputs
    Value: !Ref OutputBucket
    Export:
      Name: !Sub '${AWS::StackName}-OutputBucket'

  OutputBucketArn:
    Description: ARN of the S3 bucket for file outputs
    Value: !GetAtt OutputBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-OutputBucketArn'

  EcrRepositoryUri:
    Description: URI of the ECR repository
    Value: !GetAtt EcrRepository.RepositoryUri
    Export:
      Name: !Sub '${AWS::StackName}-EcrUri'

  EcrRepositoryName:
    Description: Name of the ECR repository
    Value: !Ref EcrRepository
    Export:
      Name: !Sub '${AWS::StackName}-EcrName'

  Region:
    Description: AWS Region
    Value: !Ref AWS::Region
    Export:
      Name: !Sub '${AWS::StackName}-Region'

  AccountId:
    Description: AWS Account ID
    Value: !Ref AWS::AccountId
    Export:
      Name: !Sub '${AWS::StackName}-AccountId'
